@use "sass:map";
@use 'vars.scss';
%sections-default {
  display: flex;
  width: 100%;
  max-width: 650px;
  height: auto;
  padding: 1.5em;
  flex-direction: column;
  align-items: center;
  gap: 23px;
  flex-shrink: 0;
  border-radius: 31px;
}

%h1-default {
  @include vars.styleTexto(var(--text-primary), 2.9rem, 700);
}

%inputclass-default {
  display: flex;
  width: 100%;
  padding: 0.5625rem 0.625rem;
  align-items: center;
  gap: 7px;
  border-radius: 11px;
}

%inputelement-default {
  background-color: transparent;
  border: none;
  font-family: vars.$font;
  font-size: 1rem;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  color: var(--text-primary); // Cor do texto do input
}

%form-default {
  display: flex;
  width: 100%;
  padding: 0.5rem;
}

%input-submit-default {
  // Usando as novas variáveis de botão
  background-color: var(--background-button);
  color: var(--button-text-color);
  font-family: vars.$font;
  font-size: 1.25rem;
  font-weight: 700;
  text-transform: uppercase;
  border-radius: 10px;
  border: none;
  display: flex;
  padding: 0.625rem 0px;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
%part1section-default{
    display: flex;
    flex-direction: column;
    width: 100%;
    flex: 2 1 350px;
    gap: 1.1rem;
}
%part2section-default{
    display: flex;
    justify-content: space-around;
    flex: 1 2 200px;
    height: 100%;
    width: 100%;
}
%label-image-default{
    display: flex;
    flex-direction: column;
    gap: 10px;
    height: auto;
}
%footer-form-default{
    display: flex;
    justify-content: space-between
}
%checkbox-clicked-default{
    position: relative;
    margin: 0 auto;
}
%checkbox-clicked-checked-default{
    position: absolute;
    left: 50%;
    top: 55%;
    transform: translate(-50%, -50%);
}

// Outros placeholders foram mantidos como estavam pois não usavam cores...

// ===================================
// ESTILOS PRINCIPAIS
// ===================================

.container-section {
  @extend %container-section-default;

  // Estilo para o Pop-up de Registro
  &.pop_up_register {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: none !important;
    z-index: 30;
    .closepopup {
      align-self: flex-start;
      position: absolute;
      top: 3%;
      left: 3%;
      cursor: pointer;
      svg {
        path{
          fill: gray ;
        }
      }
    }
  }

  // Estilos base para as seções de formulário
  .register-section, .login-section, .forgotpass-section {
    @extend %sections-default;
    position: relative;
    background: var(--background-divs); // Fundo do card
    box-shadow: 0px 0px 1.35rem 0.25rem rgba(0, 0, 0, 0.15);
    transition: background-color 0.4s ease-in; // Transição suave de tema
  }
  .forgotpass-section{
    label{
      @include vars.styleTexto(var(--text-description), .8rem, 400)
    }
  }
  // Títulos
  .title-register {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }
  h1 {
    @extend %h1-default;
    strong{
      color: var(--fixed-blue)
    }
  }
  h2 {
    @include vars.styleTexto(var(--text-primary), 2.5rem, 700);
  }
  p {
    @include vars.styleTexto(var(--text-description), 1rem, 400);
  }

  // Formulários
  form, .formularioAuth {
    @extend %form-default;
    flex-direction: row;

    .first-part-section {
      @extend %part1section-default;
    }

    .input-error-message {
      width: 100%;
      display: flex;
      flex-direction: column;
      position: relative;

      .input-class {
        @extend %inputclass-default;
        // O mixin já cuida da borda e do fundo do input
        background-color: var(--background-input);        
        input {
          @extend %inputelement-default;
          width: 100%;
        }
        input:focus {
          outline: none;
        }
      }

      .input-class.input-erro {
        outline: 2px solid var(--status-error);
      }

      p { // Mensagem de erro
        position: absolute;
        top: 100%;
        right: 0;
        @include vars.styleTexto(var(--status-error), map.get($map: vars.$tamanhos, $key: treze), 400);
        align-self: self-end;
        &::first-letter {
          text-transform: uppercase;
        }
      }
    }

    .footer-form {
      @extend %footer-form-default;

      .remember-me-div {
        display: flex;
        align-items: center;
        flex-direction: row-reverse;
        gap: 2px;
        
        input[type="checkbox"] {
          @extend %hidden-element;
        }

        // Estilo do checkbox não marcado
        .checkbox-span {
          @include vars.makeCheckbox(var(--checkbox-border-color));
          cursor: pointer;
          &:hover { opacity: .5; }
        }

        // Estilo do checkbox MARCADO
        .is-checked {
          @include vars.makeCheckbox(transparent); // A cor vem do fundo
          @extend %checkbox-clicked-default;
          background-color: var(--checkbox-checked-bg-color);
          cursor: pointer;
          
          &::after {
            @extend %checkbox-clicked-checked-default;
            content: var(--checkbox-checked-image); // A imagem do check vem da variável!
          }
        }

        label {
          @include vars.styleTexto(var(--text-secondary), .80rem, 400);
          user-select: none;
          cursor: pointer;
          &:hover + #checkbox-span { opacity: .5; }
        }
      }

      p, a {
        @include vars.styleTexto(var(--text-secondary), map.get($map: vars.$tamanhos, $key: doze), 400);
        text-decoration: none;
      }
      a:hover, p button:hover {
        text-decoration: underline;
      }
      p a, p button {
        color: var(--secondary-color);
        background-color: transparent;
        border: none;
        outline: none;
        cursor: pointer;
      }
    }

    // Botões de Submit
    input[type="submit"] {
      @extend %input-submit-default; // Herda os estilos base do botão
      margin-top: 10px;
    }

    input[type="submit"][value="Login"],
    input[type="submit"][value="Send"],
    input[type="submit"][value="Loading"],
    input[type="submit"][value="Entrar"],
    input[type="submit"][value="Enviar"],
    input[type="submit"][value="Carregando"] {
      margin-top: 20px !important;
      width: 100%;
      max-width: 150px;
      align-self: center;
    }
    input[type="submit"]:hover {
      opacity: .9;
    }
  }
  .second-part-section{
      @extend %part2section-default;
      #image{
          @extend %hidden-element;
      }
      label {
          @extend %label-image-default;
          
          
          img{
              height: 100%;
              width: 100%;
              position: absolute;
              
              border-radius: 50%;
              background-size: contain;
              object-fit: cover;
              border: 2px solid var(--background-upload-image);
          }
          
          span{
              display: inline-block;
              height: 170px;
              width: 170px;
              border-radius: 100%;
              position: relative;
              background-color: var(--background-upload-image);

              svg{
                  position: relative;
                  top: 50%;
                  left: 50%;
                  transform: translate(-50%, -50%);
              }
          }
          span:hover{
              opacity: .8;
          }
          p{
              @include vars.styleTexto(var(--text-secondary), map.get($map: vars.$tamanhos, $key: doze), 400);
              text-align: center;
          }
          span:hover, p:hover{
              cursor: pointer;
          }
      }
      
  }

  // Seções específicas
  .login-form, .forgotpass-form {
    display: flex;
    flex-direction: column;
    gap: 10px;
    .first-part-section { flex: none; }
  }
}

// Otimizações para os formulários menores
.container-section .login-section,
.container-section .forgotpass-section {
  width: 100%;
  max-width: 470px;
  padding: 2.75rem 2.375rem;
  gap: 10px;

  .login-form+p, .forgotpass-form+p {
    @include vars.styleTexto(var(--text-secondary), map.get($map: vars.$tamanhos, $key: treze), 400);
    
    a, button {
      color: var(--primary-icon-color);
    }
    a:hover, button:hover {
      text-decoration: underline;
    }
    button {
      background-color: transparent;
      border: none;
      outline: none;
      cursor: pointer;
    }
  }
}
